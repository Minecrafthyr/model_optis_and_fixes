# Generated by AI
import zipfile
import os
import shutil

def zip_multiple_folders(folder_paths, zip_path, temp_folder='.temp_folder'):
    """
    将多个文件夹的内容压缩成一个ZIP文件。

    :param folder_paths: 要压缩的文件夹路径列表
    :param zip_path: 压缩文件的保存路径（包含文件名和.zip扩展名）
    :param temp_folder: 临时文件夹的路径
    """
    # 创建临时文件夹
    os.makedirs(temp_folder, exist_ok=True)

    try:
        # 将每个文件夹中的文件复制到临时文件夹中
        for folder_path in folder_paths:
            # 确保文件夹存在
            if not os.path.exists(folder_path):
                print(f"文件夹 {folder_path} 不存在，将跳过!")
                continue
            
            for root, dirs, files in os.walk(folder_path):
                for file in files:
                    # 获取源文件的完整路径
                    file_path = os.path.join(root, file)
                    # 定义目标文件的完整路径（在临时文件夹中）
                    target_path = os.path.join(temp_folder, os.path.relpath(file_path, start=folder_path))
                    
                    # 创建目标文件的目录（如果不存在）
                    os.makedirs(os.path.dirname(target_path), exist_ok=True)

                    # 复制文件到临时文件夹（会覆盖重名文件）
                    shutil.copyfile(file_path, target_path)

        # 创建一个ZIP文件并将临时文件夹内容压缩到其中
        with zipfile.ZipFile(zip_path, "w", zipfile.ZIP_DEFLATED) as zipf:
            for root, dirs, files in os.walk(temp_folder):
                for file in files:
                    # 获取临时文件的完整路径
                    temp_file_path = os.path.join(root, file)
                    # 根据相对路径添加文件到ZIP中
                    zipf.write(temp_file_path, os.path.relpath(temp_file_path, start=temp_folder))

        print(f"所有文件夹的内容已成功压缩到 {zip_path}")

    finally:
        # 清理临时文件夹
        shutil.rmtree(temp_folder)

def pack(source, target):
    paths = []
    for s in source:
        paths.append("Assets2\\" + s)
    zip_multiple_folders(paths, f"ZippedPacks\\{target}.zip")


shutil.rmtree("ZippedPacks")
os.mkdir("ZippedPacks")

pack(["base"], "Resource Fixes Lite")
pack(["base", "full"], "Resource Fixes")
pack(["base", "full", "textured"], "Resource Fixes Textured")
pack(["base", "full", "textured", "tweaks", 'tweak_animation', 'tweak_wide_bamboo', 'tweak_fire'], "Resource Fixes Extra")
